"""
Django settings for usafa project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url  # Importando a biblioteca para lidar com URLs de banco de dados

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Secret key (mantenha em segredo em produção)
SECRET_KEY = 'django-insecure-k2k9842rsp+#ego5trcpdvc5m25xj(bbq(y5lwbwx^f9ip*sz9'

# Segurança do Django (não usar DEBUG em produção)
DEBUG = True

ALLOWED_HOSTS = ['*']

# Aplicações instaladas
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'protoDigital',
]

# Middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# URL do projeto
ROOT_URLCONF = 'usafa.urls'

# Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI
WSGI_APPLICATION = 'usafa.wsgi.application'

# Banco de dados (conexão com PostgreSQL usando URL)
DATABASE_URL = os.getenv('DATABASE_URL', 'postgresql://admin:avlQHvHmjdum9uHQSSjmtr76nQHmrhzK@dpg-ct85lp56l47c73cf7qng-a.oregon-postgres.render.com:5432/usafa')

DATABASES = {
    'default': dj_database_url.parse(DATABASE_URL, conn_max_age=600, ssl_require=True)
}

# Validação de senha
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internacionalização
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Arquivos estáticos
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Diretórios adicionais de arquivos estáticos
STATICFILES_DIRS = [
    BASE_DIR / 'protoDigital/static',
    BASE_DIR / 'static',
]

# Campo de chave primária
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Backends de autenticação personalizados
AUTHENTICATION_BACKENDS = [
    'protoDigital.models.CPFBackend',  # Ajuste conforme necessário
    'django.contrib.auth.backends.ModelBackend',
]
